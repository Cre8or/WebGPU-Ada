library project WebGPU is

	for Create_Missing_Dirs use "True";
	for Languages use ("Ada");
	for Library_Name use "WebGPU";
	for Source_Dirs use ("src/**");
	for Object_Dir use "obj";
	for Library_Dir use "lib";
	for Library_Kind use "Static";



	-- Different operating systems need different linker
	-- flags. Moreover, some features (such as WGL, GLX,
	-- CGL) are only available on one specific platform.
	-- Supported values:
	--  * windows : Microsoft Windows
	--  * x11     : X Window System
	--  * quartz  : Quartz Compositor (OS X)
	type Windowing_System_Type is
	("windows", "x11", "quartz");
	-- has a default so that the project can be opened in GPS.
	Windowing_System : Windowing_System_Type
	:= external ("Windowing_System", "x11");

	Default_GLFW_Linker_Param := "";
	case Windowing_System is
		when "windows" =>
			Default_GLFW_Linker_Param := "-lglfw3";
		when "x11" | "quartz" =>
			Default_GLFW_Linker_Param := "-lglfw";
	end case;

	GLFW_Lib   := external ("GLFW_Linker_Param", Default_GLFW_Linker_Param);
	WebGPU_Lib := external ("WebGPU_Linker_Param", "-lwebgpu_dawn");

	--Treat_Warnings_As_Errors := "-gnatwe";
	Treat_Warnings_As_Errors := "";



	package Compiler is
		for Default_Switches ("ada") use ("-gnat12", "-gnatwa", "-gnatwl", Treat_Warnings_As_Errors, "-gnatwV", "-gnatwJ", "-fstack-check", "-gnaty3abcefhiklmNprt", "-E");
	end Compiler;



	package Linker is
		case Windowing_System is
			when "quartz" =>
				for Linker_Options use (GLFW_Lib, WebGPU_Lib, "-Wl,-framework,Cocoa,-framework,IOKit");
			when "windows" =>
				for Linker_Options use (GLFW_Lib, WebGPU_Lib, "-lwinmm", "-lgdi32");
			when "x11" =>
				for Linker_Options use (GLFW_Lib, WebGPU_Lib, "-lX11", "-pthread", "-lm", "-lXcursor", "-lXxf86vm", "-lXrandr", "-lXinerama", "-lXi", "-ldl");
		end case;
	end Linker;



	package Binder is
		for Default_Switches ("ada") use ("-s", "-Es");
	end Binder;

end WebGPU;
